Enum, struct, строки
4.1.1) Реализовать функцию "char * str_dup(char * str)", которая выделяет память, дублирует в нее строку str и возвращает указатель на новую строку. В main() продемонстрировать, что при изменении элементов одной строки другая не меняется. (Доказать, что это не просто два указателя на одну строку)

4.1.2) Реализовать функцию "int str_analyse(char * str)", который анализирует строку и возвращает код, который сообщает о свойствах строки. Свойства указаны в enum'e. Далее в main() на экран выводятся свойства строки.

enum str_prop
{
	PROP_DIG = 0b100, // строка содержит цифры
	PROP_LET = 0b010, // строка содержит буквы
	PROP_SPC = 0b001  // строка содержит пробелы
};

4.1.3) Создать и вывести на экран 5 карточек людей, которые родились в случайный год от 1950 до 2020, со случайными днем и месяцем рождения и случайными именами. Имена располагаются в массиве строк и могут повторяться в карточках. Карточка человека - это "struct human", в которой содержится структура "struct date" с днем рождения

4.2) Реализовать телефонный справочник

4.2.1) Выводить на экран отсортированный список номеров с именами
4.2.2) Добавлять карточки человека (номер + имя)
4.2.3) Удалять карточку по указанному номеру
4.2.4) Перезаписывать карточки по указанному номеру (вместе с именем)
	Не обязательно:
4.2.5*) Хранить список номеров в файле


